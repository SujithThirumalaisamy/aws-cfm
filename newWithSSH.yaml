AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation stack for EC2 with SSH key pair and S3 URL stored in
  instance environment

Parameters:
  PublicKey:
    Type: String
    Description: Public key content for the SSH key pair
  TempUserName:
    Type: String
    Description: Name for the temporary user
  TempUserPolicyName:
    Type: String
    Description: Name for the temporary user's policy

Resources:
  TESTS3001:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-tests3001-${AWS::AccountId}
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  MyKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: MyKeyPair
      PublicKeyMaterial: !Ref PublicKey

  TESTSG001:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH
      GroupName: AllowSSH
      VpcId: vpc-04aaa21271ac4b8ae
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp

  TESTSG002:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP
      GroupName: AllowHTTP
      VpcId: vpc-04aaa21271ac4b8ae
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp

  TESTSG003:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTPS
      GroupName: AllowHTTPS
      VpcId: vpc-04aaa21271ac4b8ae
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp

  TESTEC2001:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      # ImageId: ami-04b70fa74e45c3917 #Ubuntu 24.04 LTS 64bit x86
      ImageId: ami-07caf09b362be10b8 #Amazon Linux 2023 64bit x86
      KeyName: MyKeyPair
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          echo "export S3_URL=https://${TESTS3001}.s3.amazonaws.com" >> /etc/profile
      Tags:
        - Key: Name
          Value: MyInstance
      SecurityGroupIds:
        - !GetAtt TESTSG001.GroupId
        - !GetAtt TESTSG002.GroupId
        - !GetAtt TESTSG003.GroupId
      IamInstanceProfile: !Ref TempInstanceProfile

  TempUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref TempUserName

  TempUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref TempUser

  TempUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Ref TempUserPolicyName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource:
              - !GetAtt TESTS3001.Arn
              - !Sub ${TESTS3001.Arn}/*
      Users:
        - !Ref TempUser

  TempRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EC2AccessS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt TESTS3001.Arn
                  - !Sub ${TESTS3001.Arn}/*

  TempInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref TempRole

Outputs:
  EC2InstanceIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt TESTEC2001.PublicIp
  S3BucketName:
    Description: Domain of the S3 bucket
    Value: !Sub s3://${TESTS3001}
  TempUserAccessKeyId:
    Description: Access key ID for the temporary user
    Value: !Ref TempUserAccessKey
  TempUserSecretAccessKey:
    Description: Secret access key for the temporary user
    Value: !GetAtt TempUserAccessKey.SecretAccessKey